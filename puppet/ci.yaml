# Puppet CI Resources

classes:
  - nsidc_jenkins
  - nsidc_miniconda

nsidc_miniconda::install:
  /opt/miniconda:
    version: '3.9.1'
    owner: vagrant
    group: vagrant
    build: true
    config:
      location: /home/vagrant
      channels:
        anaconda_nsidc_main: true
        anaconda_nsidc_dev: true
    packages:
    - bumpversion==0.5.1
    - fabric==1.10.1

# Run as vagrant, not jenkins
# This allows us to get and distribute all credentials
nsidc_jenkins::use_vagrant: true

# Jenkins Plugins
nsidc_jenkins::plugins:
  git: {}
  git-client: {}
  git-parameter: {}
  scm-api: {}
  credentials: {}
  ssh-credentials: {}
  greenballs: {}
  jobConfigHistory: {}
  mailer: {}
  instant-messaging: {}
  jabber: {}
  xvnc: {}
  ansicolor: {}
  parameterized-trigger: {}

# Jenkins Jobs
nsidc_jenkins::jobs:
  "%{hiera('project')}_A01_Checkout_Project":
    description: clone the project into workspaces/%{hiera('project')}
    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: master
      - type: choice
        name: target_environment
        description: The VM environment to deploy to
        choices:
          - integration
          - qa
          - staging
          - blue
    git:
      repo: "%{hiera('gitrepo')}"
      poll_scm: true
    command: |
      git checkout $ref
    triggers:
      - jobs:
          - "%{hiera('project')}_A02_Provision_VM"
        parameters:
          current_build_parameters: true

  "%{hiera('project')}_A02_Provision_VM":
    description: >
      Provision an integration, QA, staging, or production VM for IceBridge
    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}
    parameters:
      - type: string
        name: target_environment
        description: VM environment to build
        default: "integration"
    command: |
      #!/bin/bash
      vagrant nsidc hijack --force --env=$target_environment || true
      vagrant nsidc up --env=$target_environment --provision
      vagrant nsidc ssh --env=$target_environment -c "sudo service icebridge restart"

  "%{hiera('project')}_Z01_Integration_Refresh_Portal":
    description: >
      Pull new images and rebuild and restart portal in integration
    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}
    command: |
      #!/bin/bash
      vagrant nsidc hijack --force --env=integration
      vagrant nsidc ssh --env=integration -c "cd /vagrant/docker-compose && docker pull nsidc/icebridge-interface && docker pull nsidc/icebridge-services && docker pull nsidc/icebridge-workers && sudo service icebridge restart"

  "%{hiera('project')}_Create_Release":
    workspace: /var/lib/jenkins/workspaces/%{hiera('project')}/release
    git:
      repo: "%{hiera('gitrepo')}"
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, commit SHA) to checkout
        default: master
      - type: choice
        name: version_part
        description: The part of the version to increase, according to SemVer.
        choices:
          - patch
          - minor
          - major
    command: |
      git checkout $ref
      fab version.bump:$version_part
